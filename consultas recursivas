with recursive cte_name AS(
	CTE_query_definition <-- non-recursive term
	UNION []
	
)


create table universidad(
	programa_id serial PRIMARY KEY,
	programa varchar NOT NULL,
	facultad_id INT
);

insert into universidad values (1, 'Vicerrectoria', NULL),
							   (2, 'Facultad de Ingenieria', 1),
							   (3, 'Facultad de Medicina', 1),
							   (4, 'Facultad de Humanidades', 1),
							   (5, 'Facultad de Ciencias', 1),
							   (6, 'Ing. Sistemas', 2),
							   (7, 'Ing. Industrial', 2),
							   (8, 'Ing. Civil', 2),
							   (9, 'Ing. Electronica', 2),
							   (10, 'Medicina', 3),
							   (11, 'Enfermeria', 3),
							   (12, 'Medicina Veterinaria', 3),
							   (13, 'Fisioterapia', 3),
							   (14, 'Filosofia', 4),
							   (15, 'Educacion', 4),
							   (16, 'Fisica', 5),
							   (17, 'Quimica', 5),
							   (18, 'Biologia', 5),
							   (19, 'Matematicas', 5),
							   (20, 'Estadistica', 5)
							   
						
with recursive jerarquia AS(
	select 
		programa_id,
		programa,
		facultad_id
	from 
		universidad
	where 
		programa_id = 3
	UNION 
		select 
			u.programa_id,
			u.programa,
			u.facultad_id
		from
			universidad u
		inner join jerarquia j on j.programa_id = u.facultad_id
) Select 
*
from 
	jerarquia;
	


-- obtener los antepasados de lina ballesteros
	
	
create table miembro
	(id integer,
	 nombre character varying(50) not null,	
	 primary key(id)
	);

create table antepasado
	(id_miembro integer,
	 id_miembro1 integer,	
	 foreign key (id_miembro) references miembro,
	 foreign key (id_miembro1) references miembro
	);



INSERT INTO miembro VALUES(10000,'SIN FAMILIA');
INSERT INTO miembro VALUES(10111,'José Fernando Contreras Arias');
INSERT INTO miembro VALUES(10112,'Lorena Villegas Martínez');
INSERT INTO miembro VALUES(10113,'Jorge Andrés Avendaño Linares');
INSERT INTO miembro VALUES(10114,'Juan Carlos López Méndez');
INSERT INTO miembro VALUES(10115,'Sofia Penagos Alvarez');
INSERT INTO miembro VALUES(10116,'Sergio Andres Toledo');
INSERT INTO miembro VALUES(10117,'Ana Suárez Gómez');
INSERT INTO miembro VALUES(10118,'Lorena Paez Velandia');
INSERT INTO miembro VALUES(10119,'Ana Maria Fuentes Rojas');
INSERT INTO miembro VALUES(10120,'Carlos Alberto Gomez Franco');
INSERT INTO miembro VALUES(10121,'Lina Ballesteros Hoyos');
INSERT INTO miembro VALUES(10122,'Angelica Diaz Lopez');
INSERT INTO miembro VALUES(10123,'Juan Camilo Zarate Robledo');
INSERT INTO miembro VALUES(10124,'Carolina Manrique Lara');
INSERT INTO miembro VALUES(10125,'Jesus Andres Arbelaez Torres');
INSERT INTO miembro VALUES(10128,'Edith Zambrazo Orjuela');
INSERT INTO miembro VALUES(10129,'Adriana Marcela Jimenez Fuentes');
INSERT INTO miembro VALUES(10130,'Luz Linares Orjuela');
INSERT INTO miembro VALUES(10131,'Luis Martinez Rodriguez');
INSERT INTO miembro VALUES(10132,'Milena Romero Alvarez');
INSERT INTO miembro VALUES(10133,'Lina Marcela Jimenez Rios');
INSERT INTO miembro VALUES(10134,'Ana Maria Jimenez Diaz');
INSERT INTO miembro VALUES(10135,'Oscar Mauricio Avila Villa');
INSERT INTO miembro VALUES(10136,'Diana Jaramillo Velez');
INSERT INTO miembro VALUES(10137,'Camilo Andres Robledo');


INSERT INTO antepasado VALUES(10111,10113);
INSERT INTO antepasado VALUES(10111,10112);
INSERT INTO antepasado VALUES(10112,10000);
INSERT INTO antepasado VALUES(10113,10115);
INSERT INTO antepasado VALUES(10114,10115);
INSERT INTO antepasado VALUES(10114,10112);
INSERT INTO antepasado VALUES(10115,10112);
INSERT INTO antepasado VALUES(10116,10117);
INSERT INTO antepasado VALUES(10117,10119);
INSERT INTO antepasado VALUES(10118,10117);
INSERT INTO antepasado VALUES(10118,10119);
INSERT INTO antepasado VALUES(10119,10000);
INSERT INTO antepasado VALUES(10120,10117);
INSERT INTO antepasado VALUES(10120,10119);
INSERT INTO antepasado VALUES(10121,10000);
INSERT INTO antepasado VALUES(10122,10123);
INSERT INTO antepasado VALUES(10123,10125);
INSERT INTO antepasado VALUES(10124,10121);
INSERT INTO antepasado VALUES(10124,10123);
INSERT INTO antepasado VALUES(10125,10121);
INSERT INTO antepasado VALUES(10128,10130);
INSERT INTO antepasado VALUES(10129,10128);
INSERT INTO antepasado VALUES(10130,10000);
INSERT INTO antepasado VALUES(10131,10129);
INSERT INTO antepasado VALUES(10131,10130);
INSERT INTO antepasado VALUES(10132,10129);
INSERT INTO antepasado VALUES(10132,10130);
INSERT INTO antepasado VALUES(10133,10134);
INSERT INTO antepasado VALUES(10133,10137);
INSERT INTO antepasado VALUES(10134,10135);
INSERT INTO antepasado VALUES(10135,10137);
INSERT INTO antepasado VALUES(10136,10134);
INSERT INTO antepasado VALUES(10136,10137);
INSERT INTO antepasado VALUES(10137,10000);


select * from antepasado
select * from miembro


with recursive antepasa AS(
	select 
		id_miembro1,
		id_miembro
	from 
		antepasado a
	where 
		id_miembro1 in (
			select id 
			from miembro
			where nombre = 'Lina Ballesteros Hoyos'
		)
	UNION 
		select 
			a.id_miembro1,
			a.id_miembro
		from
			antepasado as a
		inner join antepasa d on d.id_miembro = a.id_miembro
) Select 
*
from 
	antepasa;
	


-- Obtener los antepasados de Jose fernando contrearas arias

with recursive descent AS(
	select 
		id_miembro,
		id_miembro1
	from 
		antepasado a
	where 
		id_miembro in (
			select id 
			from miembro
			where nombre = 'José Fernando Contreras Arias'
		)
	UNION 
		select 
			a.id_miembro,
			a.id_miembro1
		from
			antepasado as a
		inner join descent d on d.id_miembro1 = a.id_miembro
) Select 
*
from 
	descent;
	
-- obtener los antepasados y descendientes de Adriana Marcela Jimenez Fuentes


with recursive descent AS(
	select 
		id_miembro,
		id_miembro1
	from 
		antepasado a
	where 
		id_miembro in (
			select id 
			from miembro
			where nombre = 'Adriana Marcela Jimenez Fuentes'
		) or id_miembro1 in (
			select id 
			from miembro
			where nombre = 'Adriana Marcela Jimenez Fuentes'
		)
	UNION 
		select 
			a.id_miembro,
			a.id_miembro1
		from
			antepasado as a
		inner join descent d on d.id_miembro1 = a.id_miembro
) Select 
*
from 
	descent;


-- aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
create table territorio(
	id int,
	nombre varchar(50) not null,
	primary key (id)
);


create table region (
	id_territorio int,
	id_territorio1 int,
	foreign key (id_territorio) references territorio,
	foreign key (id_territorio1) references territorio
);


insert into territorio values (10, 'Globo Terraqueo'),
							   (11, 'Europa'),
							   (12, 'America'),
							   (13, 'Asia'),
							   (14, 'Africa'),
							   (15, 'Colombia'),
							   (16, 'Bogota'),
							   (17, 'Paris'),
							   (18, 'Francia'),
							   (19, 'Rio de Janeiro'),
							   (20, 'Marruecos'),
							   (21, 'Medellin'),
							   (22, 'China'),
							   (23, 'Shanghai'),
							   (24, 'Brasil'),
							   (25, 'Kenia'),
							   (26, 'Pekin'),
							   (27, 'Mombasa'),
							   (28, 'Estados Unidos'),
							   (29, 'Rabat'),
							   (30, 'Miami')
							   
insert into region values (11,10),
						  (12,10),
						  (13,10),
						  (14,10),
						  (15,12),
						  (18,11),
						  (16,15),
						  (16,12),
						  (17,18),
						  (17,11),
						  (19,24),
						  (19,12),
						  (28,12),
						  (24,12),
						  (20,14),
						  (22,13),
						  (25,14),
						  (21,15),
						  (21,12),
						  (23,22),
						  (26, 22),
						  (26, 13),
						  (27, 25),
						  (27, 14),
						  (29, 20),
						  (29, 14),
						  (30, 28),
						  (30, 12)
						  
/*1. Obtener los elementos del territorio del cual depende Colombia*/
with recursive colo AS(
	select 
		id_territorio,
		id_territorio1
	from 
		region r
	where 
		id_territorio in (
			select id 
			from territorio
			where nombre = 'Colombia'
		)
	UNION 
		select 
			r.id_territorio,
			r.id_territorio1
		from
			region as r
		inner join colo c on c.id_territorio1 = r.id_territorio
) Select *
from colo;						

/*2. Obtener los elementos que corresponden al Continente Americano*/
with recursive cont AS(
	select 
		id_territorio,
		id_territorio1
	from 
		region r
	where 
		id_territorio1 in (
			select id 
			from territorio
			where nombre = 'America'
		)
	UNION 
		select 
			r.id_territorio,
			r.id_territorio1
		from
			region as r
		inner join cont c on c.id_territorio = r.id_territorio1
) Select *
from cont;						

/*3. Obtener los elementos del territorio del cual depende Bogota*/
with recursive colo AS(
	select 
		id_territorio,
		id_territorio1
	from 
		region r
	where 
		id_territorio in (
			select id 
			from territorio
			where nombre = 'Bogota'
		)
	UNION 
		select 
			r.id_territorio,
			r.id_territorio1
		from
			region as r
		inner join colo c on c.id_territorio1 = r.id_territorio
) Select *
from colo;						

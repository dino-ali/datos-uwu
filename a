create table department(
dept_name varchar(20),
building varchar(15),
budget numeric(12,2),
primary key(dept_name));

create table course(
course_id varchar(7),
title varchar(50),
dept_name varchar(20),
credits numeric(2,0),
primary key(course_id),
foreign key(dept_name) references department
);

create table instructor(
ID varchar(5),
name varchar(20) not null,
dept_name varchar(20),
salary numeric(8,2),
primary key(ID),
foreign key(dept_name) references department
);

create table section(
course_id varchar(8),
sec_id varchar(8),
semester varchar(6),
year numeric(4,0),
building varchar(15),
room_number varchar(7),
time_slot_id varchar(4),
primary key (course_id, sec_id, semester, year),
foreign key (course_id) references course
);

create table teaches(
ID varchar(5),
course_id varchar(8),
sec_id varchar(8),
semester varchar(6),
year numeric(4,0),
primary key(ID, course_id, sec_id, semester, year),
foreign key(course_id, sec_id, semester, year) references section,
foreign key(ID) references instructor
);
drop table section;

select * from department;
insert into department values ('Biology', 'Watson', 90000);
insert into department values ('Comp. Sci.', 'Taylor', 100000);
insert into department values ('Elec. Eng.', 'Taylor', 85000);
insert into department values ('Finance', 'Painter', 50000);
insert into department values ('History', 'Painter', 80000);
insert into department values ('Music', 'Packard', 80000);
insert into department values ('Physics', 'Watson', 70000);

select * from course;
insert into course values ('BIO-101', 'Intro. to Biology', 'Biology',  4);
insert into course values ('BIO-301', 'Genetics', 'Biology',  4);
insert into course values ('BIO-399', 'Computational Biology', 'Biology',  3);
insert into course values ('CS-101', 'Intro. to Computer Science', 'Comp. Sci.',  4);   
insert into course values ('CS-190', 'Game Design', 'Comp. Sci.',  4);
insert into course values ('CS-315', 'Robotics', 'Comp. Sci.',  3);
insert into course values ('CS-319', 'Image Processing', 'Comp. Sci.',  3);
insert into course values ('CS-347', 'Database System Concepts', 'Comp. Sci.',  3);
insert into course values ('EE-181', 'Intro. to Digital Systems', 'Elec. Eng.',  3);
insert into course values ('FIN-201', 'Investment Banking', 'Finance',  3);
insert into course values ('HIS-351', 'World History', 'History',  3);
insert into course values ('MU-199', 'Music Video Production', 'Music',  3);
insert into course values ('PHY-101', 'Physical Principles', 'Physics',  4);

select * from instructor;
insert into instructor values (10101, 'Srinivasan', 'Comp. Sci.',  65000);
insert into instructor values (12121, 'Wu', 'Finance',  90000);
insert into instructor values (15151, 'Mozart', 'Music',  40000);
insert into instructor values (22222, 'Einstein', 'Physics',  95000);
insert into instructor values (32343, 'El Said', 'History',  60000);
insert into instructor values (33456, 'Gold', 'Physics',  87000);
insert into instructor values (45565, 'Katz', 'Comp. Sci.',  75000);
insert into instructor values (58583, 'Califieri', 'History',  62000);
insert into instructor values (76543, 'Singh', 'Finance',  80000);
insert into instructor values (76766, 'Crick', 'Biology',  72000);
insert into instructor values (83821, 'Brandt', 'Comp. Sci.',  92000);
insert into instructor values (98345, 'Kim', 'Elec. Eng.',  80000);

select * from section;
insert into section values ('BIO-101', '1', 'Summer', 2009, 'Painter', '514', 'B');
insert into section values ('BIO-301', '1', 'Summer', 2010, 'Painter', '514', 'A');
insert into section values ('CS-101', '1', 'Fall', 2009, 'Packard', '101', 'H');
insert into section values ('CS-101', '1', 'Spring', 2010, 'Packard', '101', 'F');
insert into section values ('CS-190', '1', 'Spring', 2009, 'Taylor', '3128', 'E');
insert into section values ('CS-190', '2', 'Spring', 2009, 'Taylor', '3128', 'A');
insert into section values ('CS-315', '1', 'Spring', 2010, 'Watson', '120', 'D');
insert into section values ('CS-319', '1', 'Spring', 2010, 'Watson', '100', 'B');
insert into section values ('CS-319', '2', 'Spring', 2010, 'Taylor', '3128', 'C');
insert into section values ('CS-347', '1', 'Fall', 2009, 'Taylor', '3128', 'A');
insert into section values ('EE-181', '1', 'Spring', 2009, 'Taylor', '3128', 'C');
insert into section values ('FIN-201', '1', 'Spring', 2010, 'Packard', '101', 'B');
insert into section values ('HIS-351', '1', 'Spring', 2010, 'Painter', '514', 'C');
insert into section values ('MU-199', '1', 'Spring', 2010, 'Packard', '101', 'D');
insert into section values ('PHY-101', '1', 'Fall', 2009, 'Watson', '100', 'A');

select * from teaches;
insert into teaches (ID, course_id, sec_id, semester, year)
	values('10101', 'CS-101', '1', 'Fall', 2009),
		('10101', 'CS-315', '1', 'Spring', 2010),
		('10101', 'CS-347', '1', 'Fall', 2009),
		('12121', 'FIN-201', '1', 'Spring', 2010),
		('15151', 'MU-199', '1', 'Spring', 2010),
		('22222', 'PHY-101', '1', 'Fall', 2009),
		('32343', 'HIS-351', '1', 'Spring', 2010),
		('45565', 'CS-101', '1', 'Spring', 2010),
		('45565', 'CS-319', '1', 'Spring', 2010),
		('76766', 'BIO-101', '1', 'Summer', 2009),
		('76766', 'BIO-301', '1', 'Summer', 2010),
		('83821', 'CS-190', '1', 'Spring', 2009),
		('83821', 'CS-190', '2', 'Spring', 2009),
		('83821', 'CS-319', '2', 'Spring', 2010),
		('98345', 'EE-181', '1', 'Spring', 2009)

select * from section;

delete from course;

select name from instructor
	where dept_name = 'Comp. Sci.' and salary > 70000;

'''consultar nombre del instructor, nombre del departamento, presupuesto'''
select instructor.name, department.dept_name, department.budget
	from instructor, department
	
'''para ponerlo como variable :D'''
select i.name, d.dept_name, d.budget
	from instructor as i, department as d;

'''para que no se repitan datos entre dos tablas'''
select name, instructor.dept_name, building
	from instructor, department
	where instructor.dept_name= department.dept_name;

select distinct name, course_id
	from instructor, teaches
	where instructor.ID= teaches.ID;
	
''' filtra cosas antes de %ñiñiñi%. '''
select dept_name
	from department
	where building like 'T%';
	
'''consultar nombre y presupuesto de los departamentos que comienzan por la letra S'''
select department.dept_name, department.budget
	from department
	where building like '%S';
	
'''consultar el nombre del instructor, el nombre del curso, el nombre del semestre y el año cuando se oriento el curso'''
select i.name, co.title , t.semester, t.year
	from instructor as i, course as co, teaches as t
	where i.ID = t.ID and co.course_id = t.course_id;

''' actualizar el valor de algun atributo '''
select * from instructor
update instructor
	set salary= salary * 1.05
	where salary < 70000;
	
'''actualizar el presupuesto incrementando en un 10% los valores del departamento de musica y biologia'''
select * from department
update department
	set budget = budget * 1.1
	where dept_name = 'Biology' or dept_name = 'Music'; '''or porque esta mondà no se cumple con y, imbecil'''
	
	
'''crear una columna nueva llamada prueba con el tipo de dato varchar de 20 caracteres con la tabla instructor'''
alter table instructor add prueba varchar(20)
select * from instructor

---  borra la columna
alter table instructor drop fecha_contratacion;
select * from instructor

'''para relacionar una tabla con el mismo atributo debe tener el mismo tipo de dato.'''

'''llenar el valor hola a la tupla de instructor "einstein" en la columna prueba'''
update instructor
	set prueba = 'hola'
	where instructor.name = 'Einstein';

																					'''Ejercicios'''
'''1) Crear una nueva columna llamada fecha_contratacion en la tabla instructor.'''
alter table instructor add fecha_contratacion date
select * from instructor

'''2) Crear una nueva columna llamada hora_ingreso en la tabla instructor. '''
alter table instructor add hora_ingreso time
select * from instructor

'''3) Llenar en las nuevas columnas datos para los instructores: Gold, Mozart y Kim.'''
update instructor
	set fecha_contratacion = '11/5/2022', hora_ingreso = '12:00'
 	where instructor.name = 'Gold' or instructor.name = 'Mozart' or instructor.name = 'Kim';

'''4) Tomando como referencia las tablas curso y departamento, consultar las columnas: codigo del curso, titulo, creditos y edificio donde se orientan los cursos.'''
select c.course_id, c.title, c.credits, d.building 
	from course as c, department as d
	where c.dept_name = d.dept_name

'''ordena por llave'''
select name
	from instructor
	where dept_name = 'Physics'
	order by name;

'''le da el orden que yo quiero'''
select *
	from instructor
	order by salary desc, name asc;

'''union'''
select course_id
	from section
	where semester = 'Fall' and year = 2009
union
select course_id
	from section
	where semester = 'Spring' and year = 2010;
	
'''interseccion'''
select course_id
	from section
	where semester = 'Fall' and year = 2009
intersect
select course_id
	from section
	where semester = 'Spring' and year = 2010;
	
'''diferencia'''
select course_id
	from section
	where semester = 'Fall' and year = 2009
except
select course_id
	from section
	where semester = 'Spring' and year = 2010;


'''filtrar datos nulos'''
select name
	from instructor
	where salary is null;
	
select i.name, i.dept_name
	from instructor as i
	where hora_ingreso is null;

'''
acá falta algo xd.
'''

'''buscar no se que xuxa'''
select name, salary
	from instructor
	where salary < (select salary 
				   from instructor
				   where name = 'Califieri')

'''in'''
select distinct course_id
from section
where semester = 'Fall' and year = 2009 and course_id in (select course_id
														  from section
														  where semester = 'Spring' and year = 2010)
														  
'''not in'''
select distinct course_id
from section
where semester = 'Fall' and year = 2009 and course_id not in (select course_id
															  from section
															  where semester = 'Spring' and year = 2010)
'''some'''																
select name, salary, dept_name
from instructor
where salary > some (select salary
					from instructor
					where dept_name = 'dp') '''todo el parentesis debe ser verdadero para que toda la consulta sea verdadera y funcione'''
					
'''all'''	
select d.dept_name, d.budget
from department as d
where d.budget > all(select d.budget
					from department as d
					where d.building = 'Taylor') '''no tengo presupuestos mayores'''
					
'''exists'''
select course_id
	from section as s
	where semester = 'Fall' and year = 2009 and
		exists(select *
			  from section as t
			  where semester = 'Spring' and year = 2010 and s.course_id = t.course_id)
'''evidencias uwuuwuwuwu
- consulta externa: salen 3 tuplas "CS-101", "CS-347" y "PHY-101".
- consulta interna: no salen tuplas porque "s" no està declarada, y aun mas interna sin la igualdad salen: "CS-101", "CS-315", "CS-319", "CS-319", "FIN-201", "HIS-351" y "MU-199".
- consulta completa: solo sale "CS-101". '''

'''not exists'''
select course_id
	from section as s
	where semester = 'Fall' and year = 2009 and
		not exists(select *
			  from section as t
			  where semester = 'Spring' and year = 2010 and s.course_id = t.course_id)
